@using System.Net.Http.Headers
@using XebecPortal.UI.Utils.Handlers
@inject HttpClient HttpClient
@inject IJSRuntime jsRuntime
@inject NavigationManager nav
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject CreateJobPost TempJob
<style>
    .createjob-form-container {
        overflow-y: auto;
        height: 55vh;
        width: 54%;
        margin-top: 8%;
        margin-left: 15%;
        margin-right: 25%;
        background-color: rgba(255,255,255,1);
        border: solid white 0.1em;
        box-shadow: 0 2px 5px 0 rgb(0 0 0 / 20%), 0 2px 10px 0 rgb(0 0 0 / 10%);
    }

    .createjob-form {
        height: auto;
        width: 100%;
    }

    .createjob-form-group {
        width: 100%;
        /*margin-left: 5%;*/
        margin-right: 5%;
        height: 5vh;
        margin-top: 2vh;
        margin-bottom: 2vh;
        display: flex;
    }

    .createjob-form-individual {
        width: 45%;
        margin-left: 2.5%;
        margin-right: 2.5%;
        height: 5vh;
    }

    .createjob-form-single {
        width: 50%;
        margin-left: 25%;
        margin-right: 25%;
        height: 5vh;
    }

    .createjob-form-date {
        width: 50%;
        height: 5vh;
        justify-content: left;
        align-content: start;
        align-items: flex-start;
    }

    .createjob-form input[type="text"], input[type="email"], input[type="password"], input[type="date"], input[type="textarea"] {
        background-color: transparent;
        width: 100%;
        height: 5vh;
        font-size: 1em;
        border: solid 0.15em #00bcae /*rgba(0,0,0, 0.2)*/;
        border-radius: 0.5em;
        font-weight: 600;
        color: black;
        font-family: opensans-condensed-light;
        padding-left: 1em;
        padding-bottom: 0.1em;
    }

    .createjob-form input[type="date"] {
        background-color: transparent;
        width: 100%;
        height: 5vh;
        font-size: 1em;
        border-radius: 0.5em;
        border: solid 0.15em #00bcae;
        font-weight: 600;
        color: black;
        font-family: opensans-condensed-light;
        padding-top: 0.5em;
        padding-left: 1em;
    }

    .createjob-form select {
        background-color: transparent;
        width: 100%;
        height: 5vh;
        font-size: 1em;
        border: solid 0.15em #00bcae;
        font-weight: 600;
        border-radius: 0.5em;
        color: black;
        font-family: opensans-condensed-light;
        padding-left: 1em;
        padding-bottom: 0.1em;
    }

    .createjob-form option {
        font-size: 1em;
        font-weight: 500;
        color: black;
        font-family: opensans-condensed-bold;
    }

    .createjob-form input::placeholder {
        color: black;
        font-family: opensans-condensed-bold;
        font-size: 1.15em;
        width: 100%;
        padding-left: 0.3em;
        padding-bottom: 0.1em;
        font-weight: 800;
    }

    .createjob-form textarea {
        background-color: white;
        font-size: 1.15em;
        padding-top: 0.1em;
        padding-left: 0.3em;
        font-family: opensans-condensed-light;
        overflow-y: auto;
        width: 100%;
        font-size: 1em;
        border: solid 0.15em #00bcae /*rgba(0,0,0, 0.2)*/;
        border-radius: 0.5em;
        font-weight: 800;
        color: black;
        padding-bottom: 0.1em;
    }

    .createjob-form-date-label {
        font-family: opensans-condensed-bold;
        height: 5vh;
        font-weight: 800;
        color: black;
        font-size: 1em;
        text-align: right;
        margin-top: 1.5vh;
        padding-top: 0;
    }

    .createjob-select {
    }

    *:focus {
        border: solid #00B2E5 1px !important;
    }

    .createjob-select {
        -moz-appearance: none;
        -webkit-appearance: none;
        appearance: none;
        background-image: url("../Img/caret-down.svg");
        background-repeat: no-repeat, repeat;
        background-position: right .7em top 50%, 0 0;
        background-size: .65em auto, 100%;
    }

    textarea, .createjob-form-container {
        border-radius: 10px;
    }
    /* For IE */
    .createjob-select::-ms-expand {
        display: none;
    }


    /*newly added stuff for new UI for Create a Job Form*/

    .page-title {
        text-align: center;
        font-family: opensans-condensed-bold;
        font-size: 2em;
        font-weight: 900;
        color: #004393;
        margin-top: 1vh;
        text-transform: uppercase;
    }

    .input-box {
        width: 20%;
    }

    .spacing-for-stuff {
        margin-top: 5vh;
    }

    .spacing-for-creating-stuff {
        margin-top: 10vh;
        margin-left: 2%;
    }

    .create-job-buttons {
        height: 5vh;
        width: 10%;
        margin-top: 2vh;
        background-color: #00bcae;
        border: none;
        border-radius: 2em;
        color: white;
        text-align: center;
        font-family: opensans-bold;
        font-weight: 700;
    }

    .bottom-buttons {
        margin-top: 3vh;
        margin-left: 25% !important;
        position: absolute;
        bottom: 5vh;
    }

    .form-buttons {
        margin-top: 3vh;
        height: 5vh;
        width: 100%;
        border: none;
        border-radius: 1em;
        background-color: rgba(0, 188, 174,1);
        color: white;
        /* font-family: opensans-bold; */
        font-weight: 500;
        padding-left: 0.2em;
        padding-right: 0.2em;
    }

        .form-buttons:hover {
            background-color: #d35bc9;
        }

        .form-buttons:disabled {
            background-color: grey;
        }


    .createNew-buttton-function {
        text-align: center;
        margin-top: 15vh;
    }

    .button-functions {
        margin-top: 3vh;
        height: 5vh;
        width: 10vh;
        border: none;
        border-radius: 1em;
        background-color: rgba(0, 188, 174,1); /*#00bcae;*/
        color: white;
        /*font-family: opensans-bold;*/
        font-weight: 500;
        padding-left: 0.2em;
        padding-right: 0.2em;
    }

        .button-functions:hover {
            background-color: #d35bc9;
        }

        .button-functions:disabled {
            background-color: grey;
        }

    .button-functions-not-redirectable {
        /* margin-top: 3vh;
            height: 5vh;
            width: 10vh;
            border: none;
            border-radius: 1em;
            background-color: rgba(169,169,169,1);
            color: white;
            font-weight: 500;
            padding-left: 0.2em;
            padding-right: 0.2em;*/
        background-color: rgba(169,169,169,1) !important;
    }

    .created-items-container {
        height: 20vh;
        width: 215%;
        overflow-y: auto;
    }

    .text-font-styling {
        font-family: opensans-bold;
        width: 30vh;
    }

    .text-font-for-created-items-styling {
        /*font-family: opensans-bold;*/
        color: #00bcae;
    }

    .create-job-summary {
        background-color: lightgrey !important;
        height: 55vh;
        width: 45vh;
        position: absolute;
        left: 70%;
        border-radius: 10px;
    }

    .summary-text-style {
        font-size: 1em;
        font-weight: 600;
        color: white;
        font-family: opensans-condensed-light;
        width: 285px;
    }

    .summary-container {
        width: 100%;
        height: 44vh;
        overflow-y: auto;
        padding-left: 1em;
        padding-right: 1em;
    }

    summary-container::-webkit-scrollbar-track {
        background: #00bcae;
        color: #00bcae;
        background-color: #00bcae;
        /* background:;*/
    }

    .summary-individual {
        margin-left: 2.5%;
        margin-right: 2.5%;
        min-height: 5vh;
        margin-bottom: 0.6em;

    }

    .create-form-text {
        background-color: transparent;
        width: 100%;
        height: 5vh;
        font-size: 1em;
        border: solid 0.15em #00bcae /*rgba(0,0,0, 0.2)*/;
        border-radius: 0.5em;
        font-weight: 600;
        color: black;
        font-family: opensans-condensed-light;
        padding-left: 1em;
        padding-bottom: 0.1em;
    }

    .validation-message {
        position: relative;
        bottom: 10vh;
        margin-left: 30vh;
    }

    .successMessage {
        text-align: center;
        margin-top: 10vh;
    }

    .top-Image-thing {
        position: absolute;
        height: 10vh;
        width: 100%;
        top: 11%;
        left: 0%;
        display: flex;
        align-items: center;
        justify-content: space-around;
    }

    .circle {
        height: 70px;
        width: 70px;
        background-color: #A9ABA7;
        border-radius: 50%;
    }

    .progressed-circle {
        height: 70px;
        width: 70px;
        background-color: #00BCAE;
        border-radius: 50%;
    }

    .NumberDisplay {
        position: absolute;
        width: 100%;
        display: flex;
        justify-content: space-around;
        left: 0%;
        top: 13%;
        font-weight: 800;
        color: white;
        font-size: 2em;
    }

    /*Fixing styling conflicts, not too sure where it's located and why it's happening*/
    .main {
        top: 10vh !important;
        left: 0 !important;
        height: 0vh !important;
        width: 100% !important;
    }

    .main-component {
        height: 0vh !important;
        width: 100% !important;
    }
</style>

@if (redirectpage)
{
    <XebecPortal.UI.Pages.HR.ApplicationFormControlTool />
}
else
{
    <div class="top-Image-thing">
        <div class="progressed-circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>
        @*        <div class="circle"></div>
    <div class="circle"></div>*@
    </div>
    <div class="progress-rod"></div>
    <div class="NumberDisplay">
        <div>1</div>
        <div>2</div>
        <div>3</div>
        <div>4</div>
        <div>5</div>
        @*        <div>6</div>
    <div>7</div>*@
    </div>
    <div class="TextDisplay">
        <div class="selected-create-a-job-text-page">Create A Job</div>
        <div class="application-form-text">Build Application Form</div>
        <div class="collaboration-text">Select Collaboration</div>
        @*<div class="collaboration-text-part-2">Select Collaboration Part 2</div>*@
        <div class="phases-text">Select Phases</div>
        <div class="post-a-job-text">Post Job</div>
        @*<div class="summary-text">Summary</div>*@
    </div>

    <div class="create-job-summary">
        <div class="page-title">
            <h1 style="font-size: 38px !important;">Summary</h1>
        </div>

        <div class="summary-container">
            <div class="summary-individual">
                <div class="text-font-styling"> Job Name</div>
                <div class="summary-text-style">@TempJob.Title</div>
            </div>

            <div class="summary-individual">
                <div class="text-font-styling"> Department</div>
                <div class="summary-text-style">@departments.Name</div>
            </div>

            <div class="summary-individual">
                <div class="text-font-styling"> Company</div>
                <div class="summary-text-style">@displayCompany.Name</div>
            </div>

            <div class="summary-individual">
                <div class="text-font-styling"> WFH Policy</div>
                <div class="summary-text-style">@displayPolicy.Name</div>
            </div>

            <div class="summary-individual">
                <div class="text-font-styling"> Location</div>
                <div class="summary-text-style">@displayLocations.Name</div>
            </div>

            <div class="summary-individual">
                <div class="text-font-styling"> Job Type</div>
                <div class="summary-text-style">@TempJob.JobType.Type</div>
            </div>

            <div class="summary-individual">
                <div class="text-font-styling"> Application Due Date</div>
                <div class="summary-text-style">@TempJob.DueDate.ToString("d MMMM yyyy")</div>
            </div>

            <div class="summary-individual">
                <div class="text-font-styling"> Job Description</div>
                <div class="summary-text-style">@TempJob.Description</div>
            </div>
        </div>
    </div>

    <div class="createjob-form-container">
        <EditForm EditContext="@EC" class="createjob-form" OnValidSubmit="@saveJobState">
           @* <DataAnnotationsValidator />*@
            @if (manageDep)
            {
                @if (createNewDep)
                {
                    <EditForm Model="@department" Context="Departments">
                        <div class="page-title">
                            <h1 style="font-size: 38px !important;">Create Department</h1>
                        </div>

                        <div class="form-group createjob-form-group">
                            <div class="createjob-form-individual" style="width: 200%;">
                                <div class="createjob-form-individual">
                                    <div class="text-font-styling"> Department Name</div>
                                    <InputText placeholder="" class="create-form-text" @bind-Value="department.Name" />
                                </div>
                            </div>
                            <div class="createjob-form-individual">         
                                <input type="button" value="Add Department" style="width: 100%" class="default-button-style" @onclick="() => addDepartment(department)" />
                            </div>
                        </div>
                        <div class="spacing-for-creating-stuff">
                            <div class="createjob-form-individual">
                                <div class="text-font-styling"> Departments Recently Added</div>
                                <div class="created-items-container">
                                    @foreach (var item in NewDepartments)
                                    {
                                        <div class="text-font-for-created-items-styling">@item.Name</div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="createNew-buttton-function">
                            <input type="button" value="Done" class="default-button-style" @onclick="saveDep" disabled="@saveDepPressed"/> <!-- @onclick="saveDep"-->
                            @*<input type="button" value="Save" class="button-functions" @onclick="saveDep" />*@
                        </div>
                    </EditForm>
                }
                else if (deleteDep)
                {
                    <div class="page-title">
                        <h1 style="font-size: 38px !important;">Delete Department</h1>
                    </div>

                    <div class="form-group createjob-form-group">
                        <div class="createjob-form-individual" style="width: 200%;">
                            <div class="createjob-form-individual">
                                <InputSelect class="createjob-select" style="margin-top: 3vh;" @bind-Value="department.Id">
                                    <!-- -->
                                    <!--Change the onchange event, to a different variable, since it changes the value that you chose-->
                                    <option value="0" selected disabled>Select Department</option>
                                    @foreach (var department in Departments)
                                                {
                                        <option value="@department.Id">@department.Name</option>
                                                }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="createjob-form-individual">
                            <input type="button" value="Delete Department" style="width: 100%" class="default-button-style" @onclick="() => removeDepartment(department)" />
                        </div>
                    </div>
                    <div class="createNew-buttton-function">
                        <input type="button" value="Done" class="default-button-style" @onclick="() => deleteDepartment(false)" />
                    </div>

                }
                else
                {
                    <div class="page-title">
                        <h1 style="font-size: 38px !important;">Manage Department</h1>
                    </div>
                    <div class="form-group createjob-form-group">
                        <div class="createjob-form-individual">
                            <input type="button" value="Add Department" style="width: 100%;" class="default-button-style" @onclick="() => createDep(true)" />
                        </div>
                        <div class="createjob-form-individual">
                            <input type="button" value="Delete Department" style="width: 100%;" class="default-button-style" @onclick="() => deleteDepartment(true)" />
                        </div>
                    </div>

                    <div class="spacing-for-creating-stuff">
                        <div class="createjob-form-individual">
                            <div class="text-font-styling"> Departments Created</div>
                            <div class="created-items-container">
                                @foreach (var item in Departments)
                                {
                                    <div class="text-font-for-created-items-styling">@item.Name</div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="createNew-buttton-function">
                        <input type="button" value="Done" class="default-button-style" @onclick="() => manageDepartment(false)" />
                    </div>
                }

            }
            else if (manageComp)
            {

                @if (createNewComp)
                {
                    <EditForm Model="@company" OnValidSubmit="@saveCompany" Context="Company">
                        <div class="page-title">
                            <h1 style="font-size: 38px !important;">Create Company</h1>
                        </div>

                        <div class="form-group createjob-form-group">
                            <div class="createjob-form-individual" style="width: 200%;">
                                <div class="createjob-form-individual">
                                    <div class="text-font-styling"> Company Name</div>
                                    <InputText class="create-form-text" placeholder="" @bind-Value="company.Name" />
                                </div>
                            </div>
                            <div class="createjob-form-individual">
                                <input type="button" value="Add Company" style="width: 100%;" class="default-button-style" @onclick="() => addCompany(company)"/> <!--@onclick="() => addCompany(companyToAdd)" -->
                            </div>
                        </div>
                        <div class="spacing-for-creating-stuff">
                            <div class="createjob-form-individual">
                                <div class="text-font-styling"> Companies Recently Added</div>
                                <div class="created-items-container">
                                    @foreach (var item in NewCompanies)
                                    {
                                        <div class="text-font-for-created-items-styling">@item.Name</div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="createNew-buttton-function">
                            <input type="button" value="Cancel" class="default-button-style" @onclick="() => createComp(false)" disabled="@saveCompanyPressed"/>
                            <input type="button" value="Save" class="default-button-style" @onclick="() => saveCompany()" disabled="@saveCompanyPressed"/>
                        </div>
                    </EditForm>
                }
                else if (deleteComp)
                {
                    <div class="page-title">
                        <h1 style="font-size: 38px !important;">Delete Company</h1>
                    </div>

                    <div class="form-group createjob-form-group">
                        <div class="createjob-form-individual" style="width: 200%;">
                            <div class="createjob-form-individual">
                                <InputSelect class="createjob-select" style="margin-top: 3vh;" @bind-Value="company.Id">
                                    <!--@bind-Value="Company.Id"-->
                                    <!--Change the onchange event, to a different variable, since it changes the value that you chose-->
                                    <option selected disabled value="0">Select Company</option>
                                    @foreach (var company in Company)
                                    {
                            <option value="@company.Id">@company.Name</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="createjob-form-individual">
                            <input type="button" value="Delete Company" style="width: 100%;" class="default-button-style" @onclick="() => removeCompany(company)" /> <!--@onclick="() => removeCompany(TempJob.Company)"-->
                        </div>
                    </div>
                    <div class="createNew-buttton-function">                        
                        <input type="button" value="Done" class="default-button-style"  @onclick="() => deleteCompany(false)" />
                    </div>
                }
                else
                {
                    <div class="page-title">
                        <h1 style="font-size: 38px !important;">Manage Company</h1>
                    </div>

                    <div class="form-group createjob-form-group">
                        <div class="createjob-form-individual">
                            <input type="button" value="Add Company" style="width: 100%;" class="default-button-style" @onclick="() => createComp(true)" />
                        </div>
                        <div class="createjob-form-individual">
                            <input type="button" value="Delete Company" style="width: 100%;" class="default-button-style" @onclick="() => deleteCompany(true)" />
                        </div>
                    </div>

                    <div class="spacing-for-creating-stuff">
                        <div class="createjob-form-individual">
                            <div class="text-font-styling"> Companies Recently Created</div>
                            <div class="created-items-container">
                                @foreach (var company in NewCompanies)
                                {
                                    <div class="text-font-for-created-items-styling">@company.Name</div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="createNew-buttton-function">
                        <input type="button" value="Done" class="default-button-style" @onclick="() => manageCompany(false)" />
                    </div>
                }
            }
            else
            {
                <div class="page-title">
                    <h1 style="font-size: 38px !important;">Create a job form</h1>
                </div>

                <div class="createjob-form-individual" style="position: relative;">
                    <div class="text-font-styling"> Job Name</div>
                    <InputText class="create-form-text" id="job-name" placeholder="" @bind-Value="TempJob.Title" />
                    @*<ValidationMessage For="@(() => TempJob.Title)" style="font-size: 0.8em; position: absolute; bottom: 0; bottom: 16px;" />*@
                </div>

                <div class="spacing-for-stuff">
                    <div class="form-group createjob-form-group">
                        <!--Find out how departments is null and jobtypes isn't-->
                        <div class="createjob-form-individual" style="position: relative;">
                            <!--style="width: 200%;"-->
                            <div class="text-font-styling">Department Information</div>
                            @*<ValidationMessage For="@(() => TempJob.DepartmentId)" style="font-size: 0.8em; position: absolute; bottom: 16px;" />*@
                            <InputSelect class="createjob-select" @bind-Value="departments.Id" @onfocusout="() => displayDepName(departments.Id)">
                                <option selected disabled value="0">Select Department</option>
                                @foreach (var item in Departments)
                                {
                            <option value="@item.Id">@item.Name</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="createjob-form-individual">
                            <input style="width: 100%; margin-top: 20px;" type="button" value="Manage Department" class="default-button-style" @onclick="() => manageDepartment(true)" />
                        </div>
                        @*<div class="createjob-form-individual">
                                <input type="button" value="Delete Departement" class="form-buttons" />
                            </div>*@
                    </div>
                </div>

                <div class="spacing-for-stuff">
                    <div class="form-group createjob-form-group">
                        <div class="createjob-form-individual" style="position: relative;">
                            <!--style="width: 200%;"-->
                            <div class="text-font-styling">Company Information</div>
                            @*<ValidationMessage For="@(() => TempJob.CompanyId)" style="font-size: 0.8em; position: absolute; bottom: 16px;" />*@
                            <InputSelect class="createjob-select" @bind-Value="companies.Id" @onfocusout="() => displayCompName(companies.Id)">
                                <!--style="width: 107%;"-->
                                <option selected disabled value="0">Select Company</option>
                                @foreach (var company in Company)
                                {
                            <option value="@company.Id">@company.Name</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="createjob-form-individual">
                            <input style="width: 100%;margin-top: 20px;" type="button" value="Manage Company" class="default-button-style" @onclick="() => manageCompany(true)" />
                        </div>
                        @*<div class="createjob-form-individual">
                                <input type="button" value="   Delete Company  " class="form-buttons" />
                            </div>*@
                    </div>
                </div>

                <div class="spacing-for-stuff">
                    <div class="form-group createjob-form-group">
                        <div class="createjob-form-individual" style="position: relative;">
                            <div class="text-font-styling">Location Information</div>
                            @*<ValidationMessage For="@(() => TempJob.PolicyId)" style="font-size: 0.8em; position: absolute; bottom: 16px;" />*@
                            <InputSelect class="createjob-select" @bind-Value="policies.Id" @onfocusout="() => displayPolicyName(policies.Id)">
                                <option selected disabled value="0">Select WFH Policy</option>
                                @foreach (var policy in Policies)
                                {
                            <option value="@policy.Id">@policy.Name</option>
                                }
                    </InputSelect>
                </div>
                <div class="createjob-form-individual" style="position: relative;">
                    @*<ValidationMessage For="@(() => TempJob.LocationId)" style="font-size: 0.8em; position: absolute; bottom: 16px;" />*@
                    <InputSelect class="createjob-select" style="margin-top: 2.8vh;" @bind-Value="locations.Id" @onfocusout="() => displayLocationName(locations.Id)">
                        <option selected disabled value="0">Select Office Location</option>
                        @foreach (var location in Locations)
                                {
                            <option value="@location.Id">@location.Name</option>
                                }
                    </InputSelect>
                </div>
            </div>
        </div>

                <div class="spacing-for-stuff">
                    <div class="createjob-form-individual" style="position: relative;">
                        <div class="text-font-styling">Job Type Information</div>
                        @*<ValidationMessage For="@(() => TempJob.JobTypeId)" style="font-size: 0.8em; position: absolute; bottom: 16px;" />*@
                        <InputSelect class="createjob-select" @bind-Value="@jobtype.JobTypeId" @onblur="() => displayTypeName(jobtype.JobTypeId)">
                            <option selected disabled value="0">Select Job Type</option>
                            @foreach (var item in jobTypes)
                            {
                        <option value="@item.Id">@item.Type</option>
                            }
                </InputSelect>

            </div>
        </div>

                <div class="spacing-for-stuff">
                    <div class="createjob-form-individual" style="position: relative;">
                        <div class="text-font-styling">Application Due Date:</div>
                        @*<ValidationMessage For="@(() => TempJob.DueDate)" style="font-size: 0.8em; position: absolute; bottom: 16px;" />*@
                        <InputDate class="createjob-form-date" @bind-Value="TempJob.DueDate" style="padding-right: 5px;" />
                    </div>
                </div>

                <div class="spacing-for-stuff">
                    <div class="createjob-form-individual" style="position: relative;">
                        <div class="text-font-styling">Job Advert Description:</div>
                        @*<ValidationMessage For="@(() => TempJob.Description)" style="font-size: 0.8em; position: absolute; bottom: 16px;"/>*@
                        <InputTextArea rows="3" style="padding-right: 5px; resize:none;" @bind-Value="TempJob.Description" />
                    </div>
                </div>
            }
            @*<div class="validation-message"><ValidationSummary /></div>*@

            @if (allowedToRedirect)
            {
                <div class="bottom-buttons">
                    @*<input type="button" value="Prev" class="button-functions" />*@
                    <input type="submit" class="default-button-style" value="Save" disabled="@saveButtonPressed"/>
                    <input type="button" class="default-button-style" value="Next" @onclick="() => RedirectToNextPage(true)" disabled="@nextButtonPressed"/>
                </div>
            }
            else
            {
                <div class="bottom-buttons">
                    @*<input type="button" value="Prev" class="button-functions" />*@
                    <input type="submit" class="default-button-style" value="Save" disabled="@saveButtonPressed"/>
                    <input type="button" value="Next" disabled class="button-functions-not-redirectable"/>
                </div>
            }

        </EditForm>
        @*<div class="bottom-buttons">
    <input type="button" value="Next" style="margin-left: 106%;" class="button-functions" @onclick="() => RedirectToNextPage(true)" />
    </div>*@
    </div>
}

@*<div class="form-group createjob-form-group" style="margin-top:5vh;">
        <div class="createjob-form-individual">
            <input type="text" placeholder="Job Name" @bind="TempJob.Title" />
        </div>
        <div class="createjob-form-individual">
            <select class="createjob-select" @onchange="OnStatusChanged">
                <option selected disabled>Job Status</option>
                @foreach (var status in Statuses)
                {
                    <option>@status</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group createjob-form-group">
        <div class="createjob-form-individual">
            <input type="text" placeholder="Company Name" @bind="TempJob.Company" />
        </div>
        <div class="createjob-form-individual">
            <select class="createjob-select" @onchange="OnLocationChanged">
                <option selected disabled>Select Location</option>
                @foreach (var location in Locations)
                {
                    <option>@location</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group createjob-form-group">
        <div class="createjob-form-individual">
            <select class="createjob-select" @bind="@Type">
                <option selected disabled>Select Job Type</option>
                @foreach (var item in jobTypes)
                {
                    <option value="@item.Type">@item.Type</option>
                }
            </select>

        </div>
        <div class="createjob-form-individual">
            <select class="createjob-select" @onchange="OnDepartmentChanged">
                <option selected disabled>Select Department</option>
                @foreach (var department in Departments)
                {
                    <option>@department</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group createjob-textarea">
        <textarea class="form-controlrounded-1" style="resize: none" placeholder="Description" rows="4" @bind="TempJob.Description"></textarea>
    </div>
    <div class="form-group createjob-form-group">
        <div class="createjob-form-individual">
            <h2 class="createjob-form-date-label">Due Date: </h2>
        </div>
        <div class="createjob-form-individual">
            <input type="date" class="createjob-form-date" @bind="TempJob.DueDate" style="padding-right: 5px;" />
        </div>
    </div>*@



@*<input type="button" value="Save" class="createjob-bottom-main-button" @onclick="Save" />*@
@*<div class="bottom-buttons">
        <input type="button" value="Prev" class="button-functions" />
        <input type="button" value="Save" class="button-functions" @onclick="saveJobState"/>
        <input type="button" value="Next" class="button-functions" />
    </div>*@

@code {

    string Type;

    [Parameter]
    public EventCallback<string> ValueChanged
    {
        get;
        set;
    }


    private Task OnLocationChanged(ChangeEventArgs e)
    {
        TempJob.Location.Name = e.Value.ToString();
        return ValueChanged.InvokeAsync(TempJob.LocationId.ToString());
    }




    private Task OnCompanyChanged(ChangeEventArgs e)
    {
        TempJob.Company.Name = e.Value.ToString();
        return ValueChanged.InvokeAsync(TempJob.CompanyId.ToString());
    }
    private Task OnPolicyChanged(ChangeEventArgs e)
    {
        TempJob.Policy.Name = e.Value.ToString();
        return ValueChanged.InvokeAsync(TempJob.PolicyId.ToString());
    }
    private Task OnStatusChanged(ChangeEventArgs e)
    {
        TempJob.Status = e.Value.ToString();
        return ValueChanged.InvokeAsync(TempJob.Status);
    }





    //private async Task Save()
    //{
    //    JobType jobType = new JobType();
    //    jobType.Type = Type;
    //    foreach (var type in jobTypes)
    //    {
    //        if (type.Type == Type)
    //        {
    //            jobType.Id = type.Id;
    //        }
    //    }

    //    TempJob.JobType = jobType;
    //    TempJob.JobPlatforms = ListOfPlatforms;
    //    await TempJobChanged.InvokeAsync(TempJob);
    //}

}
